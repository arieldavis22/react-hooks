{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/arieldavis/Development/code/react-hooks/pages/ImageChangeOnScroll.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport ImageToggleOnScroll from '../src/ImageToggleOnScroll';\n\nvar ImageChangeOnScroll = function ImageChangeOnScroll() {\n  _s();\n\n  var _useState = useState(0),\n      currentSpeakerId = _useState[0],\n      setCurrentSpeakerId = _useState[1];\n\n  var _useState2 = useState(0),\n      mouseEventCnt = _useState2[0],\n      setMouseEventCnt = _useState2[1];\n\n  useEffect(function () {\n    window.document.title = \"SpeakerId: \".concat(currentSpeakerId);\n    console.log(\"useEffect: setting title to \".concat(currentSpeakerId));\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, [1, 2].map(function (speakerId) {\n    return __jsx(\"div\", {\n      key: speakerId,\n      onMouseOver: function onMouseOver() {\n        setCurrentSpeakerId(speakerId);\n        setMouseEventCnt(mouseEventCnt + 1);\n        console.log(\"onMouseOver: \".concat(speakerId));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }, __jsx(ImageToggleOnScroll, {\n      primaryImg: \"/static/bw/speaker\".concat(speakerId, \".jpg\"),\n      secondaryImg: \"/static/speaker\".concat(speakerId, \".jpg\"),\n      alt: \"\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }));\n  }));\n};\n\n_s(ImageChangeOnScroll, \"XDXVveCh0mFDHA6S/A4AclRGIAU=\");\n\n_c = ImageChangeOnScroll;\nexport default ImageChangeOnScroll;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageChangeOnScroll\");","map":{"version":3,"sources":["/Users/arieldavis/Development/code/react-hooks/pages/ImageChangeOnScroll.js"],"names":["React","useState","useEffect","ImageToggleOnScroll","ImageChangeOnScroll","currentSpeakerId","setCurrentSpeakerId","mouseEventCnt","setMouseEventCnt","window","document","title","console","log","map","speakerId"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,mBAAP,MAAgC,4BAAhC;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAAA;;AAAA,kBAEkBH,QAAQ,CAAC,CAAD,CAF1B;AAAA,MAEvBI,gBAFuB;AAAA,MAELC,mBAFK;;AAAA,mBAGYL,QAAQ,CAAC,CAAD,CAHpB;AAAA,MAGvBM,aAHuB;AAAA,MAGRC,gBAHQ;;AAK9BN,EAAAA,SAAS,CAAC,YAAM;AACZO,IAAAA,MAAM,CAACC,QAAP,CAAgBC,KAAhB,wBAAsCN,gBAAtC;AACAO,IAAAA,OAAO,CAACC,GAAR,uCAA2CR,gBAA3C;AAEH,GAJQ,CAAT;AAMA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,CAAC,CAAD,EAAI,CAAJ,EAAOS,GAAP,CAAW,UAAAC,SAAS,EAAI;AACrB,WACI;AAAK,MAAA,GAAG,EAAEA,SAAV;AACA,MAAA,WAAW,EAAE,uBAAM;AACfT,QAAAA,mBAAmB,CAACS,SAAD,CAAnB;AACAP,QAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AACAK,QAAAA,OAAO,CAACC,GAAR,wBAA4BE,SAA5B;AAEH,OAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQI,MAAC,mBAAD;AACI,MAAA,UAAU,8BAAuBA,SAAvB,SADd;AAEI,MAAA,YAAY,2BAAoBA,SAApB,SAFhB;AAGI,MAAA,GAAG,EAAC,EAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARJ,CADJ;AAgBH,GAjBA,CADL,CADJ;AAsBH,CAjCD;;GAAMX,mB;;KAAAA,mB;AAmCN,eAAeA,mBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ImageToggleOnScroll from '../src/ImageToggleOnScroll'\n\nconst ImageChangeOnScroll = () => {\n\n    const [currentSpeakerId, setCurrentSpeakerId] = useState(0)\n    const [mouseEventCnt, setMouseEventCnt] = useState(0)\n    \n    useEffect(() => {\n        window.document.title = `SpeakerId: ${currentSpeakerId}`\n        console.log(`useEffect: setting title to ${currentSpeakerId}`);\n        \n    })\n\n    return (  \n        <div>\n            {[1, 2].map(speakerId => {\n                return (\n                    <div key={speakerId}\n                    onMouseOver={() => {\n                        setCurrentSpeakerId(speakerId)\n                        setMouseEventCnt(mouseEventCnt + 1)\n                        console.log(`onMouseOver: ${speakerId}`);\n                        \n                    }}\n                    >\n                        <ImageToggleOnScroll \n                            primaryImg={`/static/bw/speaker${speakerId}.jpg`}\n                            secondaryImg={`/static/speaker${speakerId}.jpg`}\n                            alt=\"\"\n                        />\n                    </div>\n                )\n            })}\n        </div>\n    );\n}\n\nexport default ImageChangeOnScroll;"]},"metadata":{},"sourceType":"module"}