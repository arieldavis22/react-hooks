{"ast":null,"code":"import speakersReducer from './speakersReducer';\nimport SpeakerData from './SpeakerData';\nimport { useEffect, useReducer } from 'react';\nimport axios from 'axios';\n\nfunction useSpeakerDataManager() {\n  const {\n    0: {\n      isLoading,\n      speakerList\n    },\n    1: dispatch\n  } = useReducer(speakersReducer, {\n    isLoading: true,\n    speakerList: []\n  });\n\n  function toggleSpeakerFavorite(speakerRec) {\n    const updateData = async function () {\n      axios.put(`http://localhost:4000/speakers/${speakerRec.id}`, speakerRec);\n      speakerRec.favorite ? dispatch({\n        type: \"unfavorite\",\n        id: speakerRec.id\n      }) : dispatch({\n        type: \"favorite\",\n        id: speakerRec.id\n      });\n    };\n\n    updateData();\n  }\n\n  useEffect(() => {\n    // new Promise(function (resolve) {\n    //     setTimeout(function () {\n    //         resolve();\n    //     }, 1000);\n    // }).then(() => {\n    //     dispatch({\n    //         type: \"setSpeakerList\",\n    //         data: SpeakerData\n    //     })\n    // });\n    const fetchData = async function () {\n      let result = await axios.get('http://localhost:4000/speakers');\n      dispatch({\n        type: 'setSpeakerList',\n        data: result.data\n      });\n    };\n\n    fetchData();\n    return () => {\n      console.log('cleanup');\n    };\n  }, []); // [speakingSunday, speakingSaturday]);\n\n  return {\n    isLoading,\n    speakerList,\n    toggleSpeakerFavorite\n  };\n}\n\nexport default useSpeakerDataManager;","map":{"version":3,"sources":["/Users/arieldavis/Development/code/react-hooks/src/useSpeakerDataManager.js"],"names":["speakersReducer","SpeakerData","useEffect","useReducer","axios","useSpeakerDataManager","isLoading","speakerList","dispatch","toggleSpeakerFavorite","speakerRec","updateData","put","id","favorite","type","fetchData","result","get","data","console","log"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,mBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,OAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,qBAAT,GAAiC;AAC7B,QAAM;AAAA,OAAC;AAACC,MAAAA,SAAD;AAAYC,MAAAA;AAAZ,KAAD;AAAA,OAA2BC;AAA3B,MAAuCL,UAAU,CAACH,eAAD,EAAkB;AACrEM,IAAAA,SAAS,EAAE,IAD0D;AAErEC,IAAAA,WAAW,EAAE;AAFwD,GAAlB,CAAvD;;AAKA,WAASE,qBAAT,CAA+BC,UAA/B,EAA2C;AACvC,UAAMC,UAAU,GAAG,kBAAiB;AAChCP,MAAAA,KAAK,CAACQ,GAAN,CAAW,kCAAiCF,UAAU,CAACG,EAAG,EAA1D,EAA6DH,UAA7D;AACAA,MAAAA,UAAU,CAACI,QAAX,GACAN,QAAQ,CAAC;AAACO,QAAAA,IAAI,EAAE,YAAP;AAAqBF,QAAAA,EAAE,EAAEH,UAAU,CAACG;AAApC,OAAD,CADR,GAEAL,QAAQ,CAAC;AAACO,QAAAA,IAAI,EAAE,UAAP;AAAmBF,QAAAA,EAAE,EAAEH,UAAU,CAACG;AAAlC,OAAD,CAFR;AAGH,KALD;;AAMAF,IAAAA,UAAU;AACb;;AAEDT,EAAAA,SAAS,CAAC,MAAM;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAMc,SAAS,GAAG,kBAAiB;AAC/B,UAAIC,MAAM,GAAG,MAAMb,KAAK,CAACc,GAAN,CAAU,gCAAV,CAAnB;AACAV,MAAAA,QAAQ,CAAC;AAACO,QAAAA,IAAI,EAAE,gBAAP;AAAyBI,QAAAA,IAAI,EAAEF,MAAM,CAACE;AAAtC,OAAD,CAAR;AACH,KAHD;;AAIAH,IAAAA,SAAS;AAET,WAAO,MAAM;AACTI,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KAFD;AAGD,GApBM,EAoBJ,EApBI,CAAT,CAhB6B,CAoCnB;;AACV,SAAO;AAAEf,IAAAA,SAAF;AAAaC,IAAAA,WAAb;AAA0BE,IAAAA;AAA1B,GAAP;AACH;;AAED,eAAeJ,qBAAf","sourcesContent":["import speakersReducer from './speakersReducer';\nimport SpeakerData from './SpeakerData';\nimport { useEffect, useReducer } from 'react';\nimport axios from 'axios';\n\nfunction useSpeakerDataManager() {\n    const [{isLoading, speakerList}, dispatch] = useReducer(speakersReducer, {\n        isLoading: true,\n        speakerList: []\n    })\n\n    function toggleSpeakerFavorite(speakerRec) {\n        const updateData = async function() {\n            axios.put(`http://localhost:4000/speakers/${speakerRec.id}`, speakerRec)\n            speakerRec.favorite ?\n            dispatch({type: \"unfavorite\", id: speakerRec.id}) :\n            dispatch({type: \"favorite\", id: speakerRec.id})\n        }\n        updateData()\n    }\n    \n    useEffect(() => {\n        // new Promise(function (resolve) {\n        //     setTimeout(function () {\n        //         resolve();\n        //     }, 1000);\n        // }).then(() => {\n        //     dispatch({\n        //         type: \"setSpeakerList\",\n        //         data: SpeakerData\n        //     })\n        // });\n        const fetchData = async function() {\n            let result = await axios.get('http://localhost:4000/speakers')\n            dispatch({type: 'setSpeakerList', data: result.data})\n        }\n        fetchData()\n\n        return () => {\n            console.log('cleanup');\n        };\n      }, []); // [speakingSunday, speakingSaturday]);\n    return { isLoading, speakerList, toggleSpeakerFavorite }\n}\n\nexport default useSpeakerDataManager;"]},"metadata":{},"sourceType":"module"}