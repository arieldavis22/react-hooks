{"ast":null,"code":"var _jsxFileName = \"/Users/arieldavis/Development/code/react-hooks/src/ImageToggleOnScroll.js\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect, useState } from 'react';\n\nconst ImageToggleOnScroll = ({\n  primaryImg,\n  secondaryImg\n}) => {\n  const imageRef = useRef(null);\n\n  const isInView = () => {\n    const rect = imageRef.current.getBoundingClientRect();\n    return rect.top >= 0 && rect.bottom <= window.innerHeight;\n  };\n\n  const {\n    0: inView,\n    1: setInView\n  } = useState(false);\n  useEffect(() => {\n    window.addEventListener(\"scroll\", scrollHandler);\n    return () => {\n      window.removeEventListener(\"scroll\", scrollHandler);\n    };\n  }, []);\n\n  const scrollHandler = () => {\n    setInView(isInView());\n  };\n\n  return __jsx(\"img\", {\n    src: inView ? secondaryImg : primaryImg,\n    ref: imageRef,\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  });\n};\n\nexport default ImageToggleOnScroll;","map":{"version":3,"sources":["/Users/arieldavis/Development/code/react-hooks/src/ImageToggleOnScroll.js"],"names":["React","useRef","useEffect","useState","ImageToggleOnScroll","primaryImg","secondaryImg","imageRef","isInView","rect","current","getBoundingClientRect","top","bottom","window","innerHeight","inView","setInView","addEventListener","scrollHandler","removeEventListener"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;;AAEA,MAAMC,mBAAmB,GAAG,CAAC;AAAEC,EAAAA,UAAF;AAAcC,EAAAA;AAAd,CAAD,KAAkC;AAE1D,QAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAD,CAAvB;;AAEA,QAAMO,QAAQ,GAAG,MAAM;AACnB,UAAMC,IAAI,GAAGF,QAAQ,CAACG,OAAT,CAAiBC,qBAAjB,EAAb;AACA,WAAOF,IAAI,CAACG,GAAL,IAAY,CAAZ,IAAiBH,IAAI,CAACI,MAAL,IAAeC,MAAM,CAACC,WAA9C;AACH,GAHD;;AAKA,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBd,QAAQ,CAAC,KAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZY,IAAAA,MAAM,CAACI,gBAAP,CAAwB,QAAxB,EAAkCC,aAAlC;AACA,WAAO,MAAM;AACTL,MAAAA,MAAM,CAACM,mBAAP,CAA2B,QAA3B,EAAqCD,aAArC;AACH,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;;AAOA,QAAMA,aAAa,GAAG,MAAM;AACxBF,IAAAA,SAAS,CAACT,QAAQ,EAAT,CAAT;AACH,GAFD;;AAIA,SACI;AACA,IAAA,GAAG,EAAGQ,MAAM,GAAGV,YAAH,GAAkBD,UAD9B;AAEA,IAAA,GAAG,EAAEE,QAFL;AAGA,IAAA,GAAG,EAAC,EAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAMH,CA5BD;;AA8BA,eAAeH,mBAAf","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\n\nconst ImageToggleOnScroll = ({ primaryImg, secondaryImg }) => {\n\n    const imageRef = useRef(null)\n\n    const isInView = () => {\n        const rect = imageRef.current.getBoundingClientRect();\n        return rect.top >= 0 && rect.bottom <= window.innerHeight;\n    }\n\n    const [inView, setInView] = useState(false);\n\n    useEffect(() => {\n        window.addEventListener(\"scroll\", scrollHandler)\n        return () => {\n            window.removeEventListener(\"scroll\", scrollHandler)\n        }\n    }, [])\n\n    const scrollHandler = () => {\n        setInView(isInView())\n    }\n\n    return (  \n        <img \n        src={ inView ? secondaryImg : primaryImg}\n        ref={imageRef}\n        alt=\"\"/>\n    );\n}\n \nexport default ImageToggleOnScroll;"]},"metadata":{},"sourceType":"module"}